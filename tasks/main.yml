---
- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"

- include: mysql.yml
  when: itop_setup_mysql
  tags: [mysql]

- name: Make sure PHP-FPM is installed (Debian)
  apt:
    name: "{{ itop_phpfpm_apt_packages }}"
    update_cache: true
    cache_valid_time: 3600
  when: ansible_os_family == 'Debian'
  tags: [prerequisites]

- name: Make sure PHP-FPM is installed (Red Hat)
  yum:
    name: "{{ itop_phpfpm_yum_packages }}"
    state: present
  when: ansible_os_family == 'RedHat'
  tags: [prerequisites]

- name: Disable PHP-FPM listen.acl_users for Docker (Red Hat)
  replace:
    dest: "/etc/php-fpm.d/www.conf"
    regexp: '^listen.acl_users = apache,nginx'
    replace: ';listen.acl_users = apache,nginx'
  notify: restart php-fpm
  when: ansible_os_family == 'RedHat' and
    ansible_virtualization_type == 'docker'

- name: Grant nginx access to the PHP-FPM socket for Docker (Red Hat)
  lineinfile:
    path: "/etc/php-fpm.d/www.conf"
    line: "listen.group = nginx"
  notify: restart php-fpm
  when: ansible_os_family == 'RedHat' and
    ansible_virtualization_type == 'docker'

- name: Make sure PHP-FPM is running
  service:
    name: "{{ itop_phpfpm_service }}"
    state: started

- name: Make sure PHP modules are installed (Debian)
  apt:
    name: "{{ itop_php_apt_packages }}"
    update_cache: true
    cache_valid_time: 3600
  when: ansible_os_family == 'Debian'
  notify: restart php-fpm
  tags: [prerequisites]

- name: Make sure PHP modules are installed (Red Hat)
  yum:
    name: "{{ itop_php_yum_packages }}"
    state: present
  when: ansible_os_family == 'RedHat'
  notify: restart php-fpm
  tags: [prerequisites]

- name: Make sure unzip is installed (Debian)
  apt:
    name: "unzip"
    update_cache: true
    cache_valid_time: 3600
  when: ansible_os_family == 'Debian'
  tags: [prerequisites]

- name: Make sure Red Hat-specific prerequisites are installed (Red Hat)
  yum:
    name: "{{ itop_extra_yum_packages }}"
    state: present
  when: ansible_os_family == 'RedHat'
  tags: [prerequisites]

- name: "Make sure {{ itop_webroot }} exists"
  file:
    dest: "{{ itop_webroot }}"
    owner: "{{ itop_owner }}"
    group: "{{ itop_group }}"
    mode: "0755"
    state: directory
  tags: [prerequisites]

- name: Download and unpack itop
  unarchive:
    remote_src: "{{ itop_download_from_sourceforge }}"
    src: "{{ itop_zipfile }}"
    dest: "{{ itop_webroot }}"
    owner: "{{ itop_owner }}"
    group: "{{ itop_group }}"
  tags: [install]

- name: Copy zip contents into place
  copy:
    remote_src: true
    src: "{{ itop_webroot }}/web/"
    dest: "{{ itop_webroot }}/"
    owner: "{{ itop_owner }}"
    mode: preserve
    group: "{{ itop_group }}"
  tags: [install]

- name: Switch web SELinux context to permissive so it will run
  community.general.selinux_permissive:
    name: httpd_t
    permissive: true
  when: ansible_os_family == 'RedHat' and
    ansible_virtualization_type != 'docker'
  tags: [selinux]

- name: Manage nginx timeouts
  copy:
    src: "timeouts.conf"
    dest: "/etc/nginx/conf.d/timeouts.conf"
    owner: "root"
    group: "root"
    mode: '0644'
  tags: [never, nginx]

- include: preseed.yml
  when: itop_preseed
  tags: [preseed]
